---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-registry-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: raw-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model-registry
  template:
    metadata:
      labels:
        app: model-registry
    spec:
      containers:
        - name: model-registry
          image: model-registry:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 500m
          volumeMounts:
            - name: models
              mountPath: /app/models
            - name: model-registry-data
              mountPath: /app/model_registry/data
      volumes:
        - name: models
          persistentVolumeClaim:
            claimName: models-pvc
        - name: model-registry-data
          persistentVolumeClaim:
            claimName: model-registry-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: model-registry
spec:
  type: NodePort
  selector:
    app: model-registry
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 30000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inference-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inference-service
  template:
    metadata:
      labels:
        app: inference-service
    spec:
      containers:
        - name: inference-service
          image: inference-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8002
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 500m
          env:
            - name: MODEL_REGISTRY_URL
              value: "http://model-registry:8000"
            - name: PREPROCESSING_SERVICE_URL
              value: "http://preprocessing-service:8001"
          volumeMounts:
            - name: models
              mountPath: /app/models
      volumes:
        - name: models
          persistentVolumeClaim:
            claimName: models-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: inference-service
spec:
  type: NodePort
  selector:
    app: inference-service
  ports:
    - protocol: TCP
      port: 8002
      targetPort: 8002
      nodePort: 30002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: preprocessing-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: preprocessing-service
  template:
    metadata:
      labels:
        app: preprocessing-service
    spec:
      containers:
        - name: preprocessing-service
          image: preprocessing-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8001
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: preprocessing-service
spec:
  type: NodePort
  selector:
    app: preprocessing-service
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001
      nodePort: 30001
